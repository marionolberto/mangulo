// GE84_Functions.cpp: implementation of the CGE84_Functions class.
//
//////////////////////////////////////////////////////////////////////

#include "stdafx.h"
#include "SMS4DC.h"
#include "GE84_Functions.h"
#include <math.h>

#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[]=__FILE__;
#define new DEBUG_NEW
#endif

//////////////////////////////////////////////////////////////////////
// Construction/Destruction
//////////////////////////////////////////////////////////////////////

CGE84_Functions::CGE84_Functions()
{

}

CGE84_Functions::~CGE84_Functions()
{

}

BOOL CGE84_Functions::CTRY_Check(CString str)
{
	BOOL flag = FALSE;
/*
	CString GE84ctry[] = {	"AFG","AFS","AGL","ALB","ALG","AND","AOE","ARM","ARS","ASC",
							"AUT","AZE","AZR","BDI","BEL","BEN","BFA","BHR","BIH","BLR",
							"BOT","BUL","CAF","CME","CNR","COD","COG","COM","CPV","CTI",
							"CVA","CYP","CZE","D","DJI","DNK","E","EGY","ERI","EST",
							"ETH","F","FIN","FRO","G","GAB","GEO","GHA","GIB","GMB",
							"GNB","GNE","GRC","GUI","HNG","HOL","HRV","I","IRL","IRN",
							"IRQ","ISR","JOR","KAZ","KEN","KGZ","KWT","LBN","LBR","LBY",
							"LIE","LSO","LTU","LUX","LVA","MAU","MCO","MDA","MDG","MDR",
							"MKD","MLI","MLT","MNG","MOZ","MRC","MTN","MWI","MYT","NGR",
							"NIG","NMB","NOR","OMA","POL","POR","QAT","REU","ROU","RRW",
							"RUS","S","SCG","SDN","SEN","SEY","SMR","SOM","SRL","STP",
							"SUI","SVK","SVN","SWZ","SYR","TCD","TGO","TJK","TKM","TRC",
							"TUN","TUR","TZA","UAE","UGA","UKR","UZB","YEM","ZMB","ZWE"	};
*/
	CString GE84ctry[] = {	"AFG","AFS","AGL","ALB","ALG","AND","AOE","ARM","ARS","ASC",
							"AUT","AZE","AZR","BDI","BEL","BEN","BFA","BHR","BIH","BLR",
							"BOT","BUL","CAF","CME","CNR","COD","COG","COM","CPV","CTI",
							"CVA","CYP","CZE","D  ","DJI","DNK","E  ","EGY","ERI","EST",
							"ETH","F  ","FIN","FRO","G  ","GAB","GEO","GHA","GIB","GMB",
							"GNB","GNE","GRC","GUI","HNG","HOL","HRV","I  ","IRL","IRN",
							"IRQ","ISR","JOR","KAZ","KEN","KGZ","KWT","LBN","LBR","LBY",
							"LIE","LSO","LTU","LUX","LVA","MAU","MCO","MDA","MDG","MDR",
							"MKD","MLI","MLT","MNG","MOZ","MRC","MTN","MWI","MYT","NGR",
							"NIG","NMB","NOR","OMA","POL","POR","QAT","REU","ROU","RRW",
							"RUS","S  ","SDN","SEN","SEY","SMR","SOM","SRL","STP","SUI",
							"SVK","SVN","SWZ","SYR","TCD","TGO","TJK","TKM","TRC","TUN",
							"TUR","TZA","UAE","UGA","UKR","UZB","YEM","ZMB","ZWE","MNE",
							"SRB", "CRO", "GCA", "MRN", "SHN"};

//	for(int i=0;i<130;i++)
	for(int i=0;i<135;i++)
		if(GE84ctry[i] == str)
			flag = TRUE;
	return flag;
}


double CGE84_Functions::GE84_1(int p,double erpW,double h1) 
{
	double Db=0.0;
	h1 = min(1800.0,max(10.0,h1));
	erpW = max(0.0,erpW);
	if(p==4)
		Db= GE84_0( 4 , erpW );
	else
	{
		if ( (h1==10.0) || (h1==37.5) || (h1==75.0) || (h1==150.0) || (h1==300.0) || (h1==600.0) || (h1==1200.0)  || (h1==1800.0) )
			Db= GE84_0( p , erpW , h1 );
		else
		{
			double h11,h12,D1,D2;
			
			if		( (h1 > 10.0) && (h1 < 37.5  ) ) {h11=10.0;h12=37.5;  }
			else if	( (h1 > 37.5) && (h1 < 75.0  ) ) {h11=37.5;h12=75.0;  }
			else if ( (h1 > 75.0  ) && (h1 < 150.0 ) ) {h11=75.0  ;h12=150.0; }
			else if ( (h1 > 150.0 ) && (h1 < 300.0 ) ) {h11=150.0 ;h12=300.0; }
			else if ( (h1 > 300.0 ) && (h1 < 600.0 ) ) {h11=300.0 ;h12=600.0; }
			else if ( (h1 > 600.0 ) && (h1 < 1200.0) ) {h11=600.0 ;h12=1200.0;}
			else if ( (h1 > 1200.0 ) && (h1 < 1800.0) ) {h11=1200.0 ;h12=1800.0;}

			D1=GE84_0( p , erpW, h11 );
			D2=GE84_0( p , erpW, h12 );
			Db=D1+(D2-D1)*(h1-h11)/(h12-h11);
		}
	}
	return Db;
}


double CGE84_Functions::GE84_0(int p,double erpW,double h1) 
{
	//p=1=='Land'  p=2=='Cold Sea' p=3=='Warm Sea' p=4=='Superrefractivity'
	//	double h0[]		=	{10,37.5,75,150,300,600,1200,1800};
	
	double erpW0[] = {1.0,3.0,10.0,30.0,100.0,300.0,1000.0,3000.0,10000.0,30000.0,100000.0,300000.0};
	double D010[12],D037[12],D075[12],D0150[12],D0300[12],D0600[12],D01200[12],D01800[12];	

	if		 ( p==1 ) 
		TABLE_4_1(D010,D037,D075,D0150,D0300,D0600,D01200,D01800) ;
	else if  ( p==2 ) 
		TABLE_4_2(D010,D037,D075,D0150,D0300,D0600,D01200,D01800) ;
	else if  ( p==3 ) 
		TABLE_4_3(D010,D037,D075,D0150,D0300,D0600,D01200,D01800) ;
	else if  ( p==4 ) 
		TABLE_4_4(D010) ;


	double D0[12];
	int i;
	if(p==4)
		for (i=0;i<12;i++)
			D0[i]=D010[i];
	else
	{
		if(h1==10.0)
			for (i=0;i<12;i++)
				D0[i]=D010[i];
		else if(h1==37.5)
			for (i=0;i<12;i++)
				D0[i]=D037[i];
		else if(h1==75.0)
			for (i=0;i<12;i++)
				D0[i]=D075[i];
		else if(h1==150.0)
			for (i=0;i<12;i++)
				D0[i]=D0150[i];
		else if(h1==300.0)
			for (i=0;i<12;i++)
				D0[i]=D0300[i];
		else if(h1==600.0)
			for (i=0;i<12;i++)
				D0[i]=D0600[i];
		else if(h1==1200.0)
			for (i=0;i<12;i++)
				D0[i]=D01200[i];
		else if(h1==1800.0)
			for (i=0;i<12;i++)
				D0[i]=D01800[i];
	}
	double  Db=0.0;
	Db = Interp1(erpW0,D0, erpW,12);
	return Db;
}


double CGE84_Functions::Interp1(double *D0,double *E0,double d,int num) 
{
	double d1,d2,E1,E2,Eb;
	if (d<D0[0])
	{
		d1=D0[0];d2=D0[1];
		E1=E0[0];E2=E0[1];
	}
	else if (d>D0[num-1])
	{
		d1=D0[num-2];d2=D0[num-1];
		E1=E0[num-2];E2=E0[num-1];
	}
	else
	{
		/////////////////////////////////////////////
		int n1=0;
		while(d>=D0[n1])
		{
			n1++;
			if (n1==num)
				break;
		}
		if (n1==0)
			n1=1;
		d1=D0[n1-1];E1=E0[n1-1];
		///////////////////////////////////////////////
		int n2=num-1;
		while(d<=D0[n2])
			n2--;
		d2=D0[n2+1];E2=E0[n2+1];
		////////////////////////////////////////////////
	}
	Eb=((d1==d2) ? E1 : E1*( pow((d/d1),(log10(E2/E1)/log10(d2/d1))) ));

	return Eb;
}

void CGE84_Functions::TABLE_4_4(double *D0) 
{
	double aD0[] = {560.0,650.0,730.0,820.0,900.0,980.0,1070.0,1150.0,1230.0,1320.0,1400.0,1480.0};
	for(int i=0;i<12;i++)
		D0[i]		=	aD0[i];
}

void CGE84_Functions::TABLE_4_3(double *D010,double *D037,double *D075,double *D0150,double *D0300,double *D0600,double *D01200,double *D01800) 
{
	double aD010[] = {25.0,40.0,85.0,210.0,310.0,390.0,490.0,610.0,800.0,1100.0,1300.0,1300.0};
	double aD037[] = {70.0,110.0,170.0,240.0,310.0,390.0,490.0,610.0,800.0,1100.0,1300.0,1300.0};
	double aD075[] = {90.0,140.0,200.0,260.0,330.0,410.0,520.0,650.0,840.0,1130.0,1300.0,1300.0};
	double aD0150[] = {120.0,160.0,220.0,290.0,360.0,440.0,550.0,680.0,870.0,1150.0,1300.0,1300.0};
	double aD0300[] = {140.0,190.0,240.0,300.0,370.0,460.0,560.0,700.0,900.0,1170.0,1300.0,1300.0};
	double aD0600[] = {170.0,220.0,270.0,330.0,400.0,490.0,600.0,740.0,940.0,1200.0,1300.0,1300.0};
	double aD01200[] = {200.0,250.0,300.0,360.0,440.0,540.0,650.0,780.0,970.0,1230.0,1300.0,1300.0};
	double aD01800[] = {240.0,290.0,340.0,400.0,480.0,560.0,670.0,800.0,1010.0,1280.0,1300.0,1300.0};
	for(int i=0;i<12;i++)
	{
		D010[i]		=	aD010[i];
		D037[i]		=	aD037[i];
		D075[i]		=	aD075[i];
		D0150[i]	=	aD0150[i];
		D0300[i]	=	aD0300[i];
		D0600[i]	=	aD0600[i];
		D01200[i]	=	aD01200[i];
		D01800[i]	=	aD01800[i];
	}
}

void CGE84_Functions::TABLE_4_2(double *D010,double *D037,double *D075,double *D0150,double *D0300,double *D0600,double *D01200,double *D01800) 
{
	double aD010[] = {25.0,40.0,75.0,150.0,260.0,320.0,380.0,440.0,510.0,590.0,680.0,790.0};
	double aD037[] = {65.0,100.0,150.0,210.0,260.0,320.0,380.0,440.0,510.0,590.0,680.0,790.0};
	double aD075[] = {80.0,120.0,170.0,220.0,280.0,330.0,390.0,460.0,530.0,610.0,700.0,800.0};
	double aD0150[] = {95.0,130.0,180.0,240.0,290.0,350.0,400.0,470.0,540.0,630.0,720.0,820.0};
	double aD0300[] = {120.0,150.0,200.0,260.0,310.0,370.0,430.0,490.0,560.0,650.0,740.0,850.0};
	double aD0600[] = {150.0,200.0,250.0,300.0,350.0,400.0,460.0,530.0,590.0,670.0,770.0,880.0};
	double aD01200[] = {200.0,240.0,290.0,340.0,380.0,440.0,500.0,570.0,640.0,730.0,810.0,910.0};
	double aD01800[] = {210.0,260.0,300.0,360.0,420.0,470.0,530.0,600.0,670.0,750.0,850.0,950.0};
	for(int i=0;i<12;i++)
	{
		D010[i]		=	aD010[i];
		D037[i]		=	aD037[i];
		D075[i]		=	aD075[i];
		D0150[i]	=	aD0150[i];
		D0300[i]	=	aD0300[i];
		D0600[i]	=	aD0600[i];
		D01200[i]	=	aD01200[i];
		D01800[i]	=	aD01800[i];
	}
}

void CGE84_Functions::TABLE_4_1(double *D010,double *D037,double *D075,double *D0150,double *D0300,double *D0600,double *D01200,double *D01800) 
{
	double aD010[] = {20.0,30.0,35.0,45.0,70.0,140.0,250.0,300.0,350.0,410.0,460.0,520.0};
	double aD037[] = {35.0,45.0,65.0,100.0,140.0,190.0,250.0,300.0,350.0,410.0,460.0,520.0};
	double aD075[] = {50.0,65.0,90.0,130.0,160.0,210.0,260.0,310.0,370.0,420.0,470.0,530.0};
	double aD0150[] = {60.0,75.0,100.0,140.0,180.0,220.0,270.0,330.0,380.0,430.0,490.0,540.0};
	double aD0300[] = {80.0,95.0,120.0,150.0,190.0,240.0,290.0,340.0,400.0,450.0,510.0,560.0};
	double aD0600[] = {100.0,120.0,150.0,190.0,230.0,280.0,320.0,380.0,430.0,480.0,540.0,600.0};
	double aD01200[] = {140.0,160.0,190.0,230.0,270.0,320.0,360.0,420.0,470.0,520.0,580.0,630.0};
	double aD01800[] = {150.0,180.0,220.0,260.0,300.0,350.0,400.0,450.0,500.0,560.0,610.0,670.0};
	for(int i=0;i<12;i++)
	{
		D010[i]		=	aD010[i];
		D037[i]		=	aD037[i];
		D075[i]		=	aD075[i];
		D0150[i]	=	aD0150[i];
		D0300[i]	=	aD0300[i];
		D0600[i]	=	aD0600[i];
		D01200[i]	=	aD01200[i];
		D01800[i]	=	aD01800[i];
	}
}

void CGE84_Functions::TABLE_4_5(double *D010,double *D037,double *D075,double *D0150,double *D0300,double *D0600,double *D01200,double *D01800) 
{
	double aD010[] = {45.0,60.0,110.0,200.0,280.0,330.0,390.0,440.0,500.0,550.0,600.0,660.0};
	double aD037[] = {90.0,130.0,170.0,230.0,280.0,330.0,390.0,440.0,500.0,550.0,600.0,660.0};
	double aD075[] = {110.0,150.0,190.0,240.0,290.0,340.0,400.0,450.0,510.0,560.0,620.0,670.0};
	double aD0150[] = {120.0,160.0,200.0,250.0,300.0,360.0,410.0,470.0,520.0,580.0,630.0,690.0};
	double aD0300[] = {140.0,180.0,220.0,270.0,320.0,370.0,430.0,490.0,540.0,600.0,650.0,710.0};
	double aD0600[] = {170.0,210.0,260.0,300.0,360.0,410.0,460.0,520.0,570.0,630.0,680.0,740.0};
	double aD01200[] = {220.0,260.0,300.0,340.0,390.0,450.0,500.0,560.0,610.0,670.0,720.0,780.0};
	double aD01800[] = {240.0,280.0,330.0,380.0,430.0,480.0,530.0,590.0,650.0,700.0,760.0,810.0};

	for(int i=0;i<12;i++)
	{
		D010[i]		=	aD010[i];
		D037[i]		=	aD037[i];
		D075[i]		=	aD075[i];
		D0150[i]	=	aD0150[i];
		D0300[i]	=	aD0300[i];
		D0600[i]	=	aD0600[i];
		D01200[i]	=	aD01200[i];
		D01800[i]	=	aD01800[i];
	}
}

void CGE84_Functions::TABLE_4_6(double *D010,double *D037,double *D075,double *D0150,double *D0300,double *D0600,double *D01200,double *D01800) 
{
	double aD010[] = {110.0,230.0,300.0,350.0,410.0,480.0,560.0,640.0,750.0,860.0,990.0,1160.0};
	double aD037[] = {190.0,240.0,300.0,350.0,410.0,480.0,560.0,640.0,750.0,860.0,990.0,1160.0};
	double aD075[] = {200.0,260.0,310.0,370.0,430.0,500.0,480.0,660.0,760.0,870.0,1000.0,1190.0};
	double aD0150[] = {220.0,270.0,320.0,380.0,440.0,510.0,590.0,680.0,780.0,890.0,1040.0,1220.0};
	double aD0300[] = {230.0,290.0,350.0,400.0,470.0,530.0,610.0,700.0,800.0,910.0,1050.0,1240.0};
	double aD0600[] = {280.0,330.0,380.0,440.0,500.0,570.0,640.0,730.0,840.0,940.0,1070.0,1250.0};
	double aD01200[] = {320.0,360.0,420.0,480.0,540.0,610.0,700.0,780.0,870.0,980.0,1130.0,1270.0};
	double aD01800[] = {340.0,390.0,450.0,510.0,570.0,640.0,720.0,810.0,910.0,1010.0,1160.0,1300.0};

	for(int i=0;i<12;i++)
	{
		D010[i]		=	aD010[i];
		D037[i]		=	aD037[i];
		D075[i]		=	aD075[i];
		D0150[i]	=	aD0150[i];
		D0300[i]	=	aD0300[i];
		D0600[i]	=	aD0600[i];
		D01200[i]	=	aD01200[i];
		D01800[i]	=	aD01800[i];
	}
}

void CGE84_Functions::TABLE_4_7(double *D010,double *D037,double *D075,double *D0150,double *D0300,double *D0600,double *D01200,double *D01800) 
{
	double aD010[] = {140.0,280.0,350.0,440.0,560.0,720.0,950.0,1300.0,1300.0,1300.0,1300.0,1300.0};
	double aD037[] = {210.0,280.0,350.0,440.0,560.0,720.0,950.0,1300.0,1300.0,1300.0,1300.0,1300.0};
	double aD075[] = {230.0,300.0,380.0,480.0,600.0,750.0,990.0,1300.0,1300.0,1300.0,1300.0,1300.0};
	double aD0150[] = {260.0,330.0,400.0,500.0,620.0,780.0,1020.0,1300.0,1300.0,1300.0,1300.0,1300.0};
	double aD0300[] = {280.0,350.0,420.0,520.0,640.0,810.0,1050.0,1300.0,1300.0,1300.0,1300.0,1300.0};
	double aD0600[] = {300.0,370.0,460.0,560.0,680.0,850.0,1080.0,1300.0,1300.0,1300.0,1300.0,1300.0};
	double aD01200[] = {340.0,400.0,500.0,600.0,730.0,890.0,1110.0,1300.0,1300.0,1300.0,1300.0,1300.0};
	double aD01800[] = {370.0,450.0,510.0,620.0,750.0,920.0,1150.0,1300.0,1300.0,1300.0,1300.0,1300.0};

	for(int i=0;i<12;i++)
	{
		D010[i]		=	aD010[i];
		D037[i]		=	aD037[i];
		D075[i]		=	aD075[i];
		D0150[i]	=	aD0150[i];
		D0300[i]	=	aD0300[i];
		D0600[i]	=	aD0600[i];
		D01200[i]	=	aD01200[i];
		D01800[i]	=	aD01800[i];
	}
}


double CGE84_Functions::TABLE_4_8(double f_MHz) 
{
	double aF0[] = { 87.6,87.7,87.8,87.9,88.0,88.1,88.2,88.3,88.4,88.5,88.6,88.7,88.8,88.9
					,89.0,89.1,89.2,89.3,89.4,89.5,89.6,89.7,89.8,89.9,90.0,90.1,90.2,90.3
					,90.4,90.5,90.6,90.7,90.8,90.9,91.0,91.1,91.2,91.3,91.4,91.5,91.6,91.7
					,91.8,91.9,92.0,92.1,92.2,92.3,92.4,92.5,92.6,92.7,92.8,92.9,93.0,93.1
					,93.2,93.3,93.4,93.5,93.6,93.7,93.8,93.9,94.0,94.1,94.2,94.3,94.4,94.5
					,94.6,94.7,94.8,94.9,95.0,95.1,95.2,95.3,95.4,95.5,95.6,95.7,95.8,95.9
					,96.0,96.1,96.2,96.3,96.4,96.5,96.6,96.7,96.8,96.9,97.0,97.1,97.2,97.3
					,97.4,97.5,97.6,97.7,97.8,97.9,98.0,98.1,98.2,98.3,98.4,98.5,98.6,98.7
					,98.8,98.9,99.0,99.1,99.2,99.3,99.4,99.5,99.6,99.7,99.8,99.9	};

	double aC0[] = { 12.0,13.0,14.0,15.0,15.0,16.0,17.0,17.0,15.0,14.0,12.0,10.0, 9.0, 7.0
					, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 7.0,10.0,12.0
					,14.0,16.0,18.0,21.0,23.0,25.0,25.0,25.0,25.0,25.0,25.0,25.0,25.0,12.0
					,12.0,25.0,25.0,22.0,19.0,16.0,13.0,10.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0
					, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 2.0
					, 3.0, 4.0, 5.0, 6.0, 6.0, 7.0, 9.0, 9.0,10.0,11.0,12.0,13.0,14.0,15.0
					,15.0,16.0,17.0,17.0,15.0,14.0,12.0,10.0, 9.0, 7.0, 5.0, 5.0, 5.0, 5.0
					, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 7.0,10.0,12.0,14.0,16.0,18.0,21.0
					,23.0,25.0,25.0,25.0,25.0,25.0,25.0,25.0,25.0,12.0,12.0,25.0	};

	double corr_dB = Interp2(aF0,aC0,f_MHz,124) ;
	return corr_dB;
}

double CGE84_Functions::GE84_BT0(int p,double erpW,double h1) 
{
	//p=1=='Land'  p=2=='Cold Sea' p=3=='Warm Sea'
	//	double h0[]		=	{10,37.5,75,150,300,600,1200,1800};
	
	double erpW0[] = {1.0,3.0,10.0,30.0,100.0,300.0,1000.0,3000.0,10000.0,30000.0,100000.0,300000.0};
	double D010[12],D037[12],D075[12],D0150[12],D0300[12],D0600[12],D01200[12],D01800[12];	

	if		 ( p==1 ) 
		TABLE_4_5(D010,D037,D075,D0150,D0300,D0600,D01200,D01800) ;
	else if  ( p==2 ) 
		TABLE_4_6(D010,D037,D075,D0150,D0300,D0600,D01200,D01800) ;
	else if  ( p==3 ) 
		TABLE_4_7(D010,D037,D075,D0150,D0300,D0600,D01200,D01800) ;

	double D0[12];
	int i;

	if(h1==10.0)
		for (i=0;i<12;i++)
			D0[i]=D010[i];
	else if(h1==37.5)
		for (i=0;i<12;i++)
			D0[i]=D037[i];
	else if(h1==75.0)
		for (i=0;i<12;i++)
			D0[i]=D075[i];
	else if(h1==150.0)
		for (i=0;i<12;i++)
			D0[i]=D0150[i];
	else if(h1==300.0)
		for (i=0;i<12;i++)
			D0[i]=D0300[i];
	else if(h1==600.0)
		for (i=0;i<12;i++)
			D0[i]=D0600[i];
	else if(h1==1200.0)
		for (i=0;i<12;i++)
			D0[i]=D01200[i];
	else if(h1==1800.0)
		for (i=0;i<12;i++)
			D0[i]=D01800[i];

	double  Db=0.0;
	Db = Interp1(erpW0,D0, erpW,12);
	return Db;
}

double CGE84_Functions::GE84_BT1(int p,double erpW,double h1, double f_MHz) 
{
	double corr_dB = TABLE_4_8(f_MHz);
	erpW = erpW/(pow(10.0,corr_dB/10.0));
	erpW = max(1.0,erpW);

	double Db = 0.0;
	h1 = min(1800.0,max(10.0,h1));

	if ( (h1==10.0) || (h1==37.5) || (h1==75.0) || (h1==150.0) || (h1==300.0) || (h1==600.0) || (h1==1200.0)  || (h1==1800.0) )
		Db= GE84_BT0( p , erpW , h1 );
	else
	{
		double h11,h12,D1,D2;
		
		if		( (h1 > 10.0) && (h1 < 37.5  ) ) {h11=10.0;h12=37.5;  }
		else if	( (h1 > 37.5) && (h1 < 75.0  ) ) {h11=37.5;h12=75.0;  }
		else if ( (h1 > 75.0  ) && (h1 < 150.0 ) ) {h11=75.0  ;h12=150.0; }
		else if ( (h1 > 150.0 ) && (h1 < 300.0 ) ) {h11=150.0 ;h12=300.0; }
		else if ( (h1 > 300.0 ) && (h1 < 600.0 ) ) {h11=300.0 ;h12=600.0; }
		else if ( (h1 > 600.0 ) && (h1 < 1200.0) ) {h11=600.0 ;h12=1200.0;}
		else if ( (h1 > 1200.0 ) && (h1 < 1800.0) ) {h11=1200.0 ;h12=1800.0;}

		D1=GE84_BT0( p , erpW, h11 );
		D2=GE84_BT0( p , erpW, h12 );
		Db=D1+(D2-D1)*(h1-h11)/(h12-h11);
	}
	return Db;
}


double CGE84_Functions::Interp2(double *D0,double *E0,double d,int num) 
{
	double d1,d2,E1,E2,Eb;
	if (d<D0[0])
	{
		d1=D0[0];d2=D0[1];
		E1=E0[0];E2=E0[1];
	}
	else if (d>D0[num-1])
	{
		d1=D0[num-2];d2=D0[num-1];
		E1=E0[num-2];E2=E0[num-1];
	}
	else
	{
		/////////////////////////////////////////////
		int n1=0;
		while(d>=D0[n1])
		{
			n1++;
			if (n1==num)
				break;
		}
		if (n1==0)
			n1=1;
		d1=D0[n1-1];E1=E0[n1-1];
		///////////////////////////////////////////////
		int n2=num-1;
		while(d<=D0[n2])
			n2--;
		d2=D0[n2+1];E2=E0[n2+1];
		////////////////////////////////////////////////
	}
	Eb=((d1==d2) ? E1 : E1+(E2-E1)*(d-d1)/(d2-d1));

	return Eb;
}

double CGE84_Functions::SM851_TABLE_1213(double f_MHz,BOOL Mono,BOOL Steady,BOOL Fm,int Df) 
{
	double aF0[]   = {0.0,5.0,10.0,15.0,20.0,25.0,30.0,35.0,40.0,45.0,50.0,55.0,60.0,65.0,70.0,75.0,100.0,125.0,150.0,175.0,200.0,225.0,250.0,275.0,300.0,325.0,350.0,375.0,400.0};
	double PR0[29];
	int i;
	double PR = 0.0;


	if(Df==75)	//TABLE12
	{
		double aMSF75[] = {36.0,35.1547,34.224,33.216,32.1387,31.0,29.7643,28.4128,26.9792,25.4971,24.0,22.3829,20.6208,18.8672,17.2757,16.0,12.0,9.5,8.0,7.0,6.0,4.5,2.0,-2.0,-7.0,-11.5,-15.0,-17.5,-20.0};
		double aMSA75[] = {36.0,35.1547,34.224,33.216,32.1387,31.0,29.7643,28.4128,26.9792,25.4971,24.0,22.3829,20.6208,18.8672,17.2757,16.0,12.0,9.5,8.0,7.0,6.0,4.5,2.0,-2.0,-7.0,-7.0,-7.0,-7.0,-7.0};
		double aMTF75[] = {28.0,27.9493,27.808,27.592,27.3173,27.0,26.4412,25.5236,24.3855,23.1648,22.0,20.8314,19.5633,18.2796,17.0639,16.0,12.0, 9.5, 8.0, 7.0, 6.0, 4.5, 2.0,-2.0,-7.0,-11.5,-15.0,-17.5,-20.0};
		double aMTA75[] = {28.0,27.9493,27.808,27.592,27.3173,27.0,26.4412,25.5236,24.3855,23.1648,22.0,20.8314,19.5633,18.2796,17.0639,16.0,12.0, 9.5, 8.0, 7.0, 6.0, 4.5, 2.0,-2.0,-7.0,-7.0,-7.0,-7.0,-7.0};
		double aSSF75[] = {45.0,46.776,48.408,49.752,50.664,51.0,51.0,51.0,51.0,51.0,51.0,50.632,49.656,48.264,46.648,45.0,33.0,24.5,18.0,11.0, 7.0, 4.5, 2.0,-2.0,-7.0,-11.5,-15.0,-17.5,-20.0};
		double aSSA75[] = {45.0,46.776,48.408,49.752,50.664,51.0,51.0,51.0,51.0,51.0,51.0,50.632,49.656,48.264,46.648,45.0,33.0,24.5,18.0,11.0, 7.0, 4.5, 2.0,-2.0,-7.0,-7.0,-7.0,-7.0,-7.0};
		double aSTF75[] = {37.0,38.776,40.408,41.752,42.664,43.0,43.0,43.0,43.0,43.0,43.0,42.632,41.656,40.264,38.648,37.0,25.0,18.0,14.0,10.0, 7.0, 4.5, 2.0,-2.0,-7.0,-11.5,-15.0,-17.5,-20.0};
		double aSTA75[] = {37.0,38.776,40.408,41.752,42.664,43.0,43.0,43.0,43.0,43.0,43.0,42.632,41.656,40.264,38.648,37.0,25.0,18.0,14.0,10.0, 7.0, 4.5, 2.0,-2.0,-7.0,-7.0,-7.0,-7.0,-7.0};
		if	   ((Mono)&&(Steady)&&(Fm))
			for (i=0;i<29;i++)
				PR0[i]=aMSF75[i];
		else if((Mono)&&(Steady)&&(!Fm))
			for (i=0;i<29;i++)
				PR0[i]=aMSA75[i];
		else if((Mono)&&(!Steady)&&(Fm))
			for (i=0;i<29;i++)
				PR0[i]=aMTF75[i];
		else if((Mono)&&(!Steady)&&(!Fm))
			for (i=0;i<29;i++)
				PR0[i]=aMTA75[i];
		else if((!Mono)&&(Steady)&&(Fm))
			for (i=0;i<29;i++)
				PR0[i]=aSSF75[i];
		else if((!Mono)&&(Steady)&&(!Fm))
			for (i=0;i<29;i++)
				PR0[i]=aSSA75[i];
		else if((!Mono)&&(!Steady)&&(Fm))
			for (i=0;i<29;i++)
				PR0[i]=aSTF75[i];
		else if((!Mono)&&(!Steady)&&(!Fm))
			for (i=0;i<29;i++)
				PR0[i]=aSTA75[i];
		PR = Interp2(aF0,PR0,f_MHz*1000.0,29);
	}
	else if(Df==50)	//TABLE13
	{
		double aMSF50[] = {39.0,37.6789,36.3168,34.9152,33.4757,32.0,30.4833,28.9220,27.3190,25.6773,24.0,22.1238,20.0442,18.0028,16.2409,15.0,12.0, 7.5, 6.0, 2.0,-2.5,-3.5,-6.0,-7.5,-10.0,-12.0,-15.0,-17.5,-20.0};
		double aMSA50[] = {39.0,37.6789,36.3168,34.9152,33.4757,32.0,30.4833,28.9220,27.3190,25.6773,24.0,22.1238,20.0442,18.0028,16.2409,15.0,12.0, 7.5, 6.0, 2.0,-2.5,-3.5,-6.0,-7.5,-10.0,-10.0,-10.0,-10.0,-10.0};
		double aMTF50[] = {32.0,31.3536,30.6208,29.8112,28.9344,28.0,26.9684,25.8171,24.5817,23.2975,22.0,20.5793,19.0087,17.4485,16.0588,15.0,12.0, 7.5, 6.0, 2.0,-2.5,-3.5,-6.0,-7.5,-10.0,-12.0,-15.0,-17.5,-20.0};
		double aMTA50[] = {32.0,31.3536,30.6208,29.8112,28.9344,28.0,26.9684,25.8171,24.5817,23.2975,22.0,20.5793,19.0087,17.4485,16.0588,15.0,12.0, 7.5, 6.0, 2.0,-2.5,-3.5,-6.0,-7.5,-10.0,-10.0,-10.0,-10.0,-10.0};
		double aSSF50[] = {49.0,50.3120,51.4160,52.2640,52.8080,53.0,52.8880,52.5840,52.1360,51.5920,51.0,50.2480,49.2240,47.9760,46.5520,45.0,33.0,25.0,18.0,12.0, 7.0, 5.0, 2.0,0.0,-7.0,-10.0,-15.0,-17.5,-20.0};
		double aSSA50[] = {49.0,50.3120,51.4160,52.2640,52.8080,53.0,52.8880,52.5840,52.1360,51.5920,51.0,50.2480,49.2240,47.9760,46.5520,45.0,33.0,25.0,18.0,12.0, 7.0, 5.0, 2.0,0.0,-7.0,-7.0,-7.0,-7.0,-7.0};
		double aSTF50[] = {41.0,42.3120,43.4160,44.2640,44.8080,45.0,44.8880,44.5840,44.1360,43.5920,43.0,42.2480,41.2240,39.9760,38.5520,37.0,25.0,18.0,14.0,11.0, 7.0, 5.0, 2.0,0.0,-7.0,-10.0,-15.0,-17.5,-20.0};
		double aSTA50[] = {41.0,42.3120,43.4160,44.2640,44.8080,45.0,44.8880,44.5840,44.1360,43.5920,43.0,42.2480,41.2240,39.9760,38.5520,37.0,25.0,18.0,14.0,11.0, 7.0, 5.0, 2.0,0.0,-7.0,-7.0,-7.0,-7.0,-7.0};
		if	   ((Mono)&&(Steady)&&(Fm))
			for (i=0;i<29;i++)
				PR0[i]=aMSF50[i];
		else if((Mono)&&(Steady)&&(!Fm))
			for (i=0;i<29;i++)
				PR0[i]=aMSA50[i];
		else if((Mono)&&(!Steady)&&(Fm))
			for (i=0;i<29;i++)
				PR0[i]=aMTF50[i];
		else if((Mono)&&(!Steady)&&(!Fm))
			for (i=0;i<29;i++)
				PR0[i]=aMTA50[i];
		else if((!Mono)&&(Steady)&&(Fm))
			for (i=0;i<29;i++)
				PR0[i]=aSSF50[i];
		else if((!Mono)&&(Steady)&&(!Fm))
			for (i=0;i<29;i++)
				PR0[i]=aSSA50[i];
		else if((!Mono)&&(!Steady)&&(Fm))
			for (i=0;i<29;i++)
				PR0[i]=aSTF50[i];
		else if((!Mono)&&(!Steady)&&(!Fm))
			for (i=0;i<29;i++)
				PR0[i]=aSTA50[i];
		PR = Interp2(aF0,PR0,f_MHz*1000.0,29);
	}
	return PR;
}



double CGE84_Functions::GE84_TABLE_2_3(double f_MHz,BOOL Steady,int DfW) 
{
	double aF0[]   = {0.0,5.0,10.0,15.0,20.0,25.0,30.0,35.0,40.0,45.0,50.0,55.0,60.0,65.0,70.0,75.0,100.0,125.0,150.0,175.0,200.0,225.0,250.0,275.0,300.0,325.0,350.0,375.0,400.0};
	double PR0[29];
	int i;
	double PR = 0.0;

	double aMSS50[] = {49.0,50.312,51.416,52.264,52.808,53.0,52.888,52.584,52.136,51.592,51.0,50.248,49.224,47.976,46.552,45.0,33.0,25.0,18.0,12.0, 7.0, 5.0, 2.0,0.0,-7.0,-10.0,-15.0,-17.5,-20.0};
	double aMST50[] = {41.0,42.312,43.416,44.264,44.808,45.0,44.888,44.584,44.136,43.592,43.0,42.248,41.224,39.976,38.552,37.0,25.0,18.0,14.0,11.0, 7.0, 5.0, 2.0,0.0,-7.0,-10.0,-15.0,-17.5,-20.0};
	double aMSS75[] = {45.0,46.776,48.408,49.752,50.664,51.0,51.0,51.0,51.0,51.0,51.0,50.632,49.656,48.264,46.648,45.0,33.0,24.5,18.0,11.0, 7.0, 4.5, 2.0,-2.0,-7.0,-11.5,-15.0,-17.5,-20.0};
	double aMST75[] = {37.0,38.776,40.408,41.752,42.664,43.0,43.0,43.0,43.0,43.0,43.0,42.632,41.656,40.264,38.648,37.0,25.0,18.0,14.0,10.0, 7.0, 4.5, 2.0,-2.0,-7.0,-11.5,-15.0,-17.5,-20.0};
	if	    ((Steady)&&(DfW==50))
		for (i=0;i<29;i++)
			PR0[i]=aMSS50[i];
	else if ((!Steady)&&(DfW==50))
		for (i=0;i<29;i++)
			PR0[i]=aMST50[i];
	else if ((Steady)&&(DfW==75))
		for (i=0;i<29;i++)
			PR0[i]=aMSS75[i];
	else if ((!Steady)&&(DfW==75))
		for (i=0;i<29;i++)
			PR0[i]=aMSS75[i];
	PR = Interp2(aF0,PR0,f_MHz*1000.0,29);
	return PR;
}


double CGE84_Functions::GE84_TABLE_2_7(double f_MHz,BOOL Mono) 
{
	double PR0[34];
	int i;
	double PR = 0.0;

	double aF0[]   = {-2.0,-1.0,-0.5,-0.15,-0.1,-0.05,0, 0.05, 0.1, 0.15, 0.25, 0.5, 1.0
						, 2.0, 3.0, 4.0, 4.18, 4.25, 4.41, 4.48, 4.7, 5.0, 6.0, 6.25, 6.3, 6.4
						, 6.45, 6.475, 6.5, 6.525, 6.55, 6.6, 6.7, 7.0};

	double aM0[]   = {-30.0, -2.0,  0.0, 19.0, 24.0, 30.0, 35.0, 30.0, 24.0, 19.0, 10.0,0.0,-1.0
						, -3.0, -4.0, -5.0,  8.0, 10.0, 10.0,  8.0, -5.0,-15.0,-25.0
						,-13.0, -5.0,  6.0, 15.0, 25.0, 28.0, 25.0, 15.0,  6.0, -3.0,-30.0};

	double aS0[]   = {-12.0,18.0,20.0,25.0,35.0,50.0,45.0,50.0,35.0,31.0,25.0,20.0,20.0,18.0
						,17.0,15.0,25.0,26.0,26.0,25.0,15.0, 0.0,-5.0
						,-6.0, 5.0,26.0,40.0,43.0,35.0,43.0,40.0,26.0, 0.0,-13};
	if	    (Mono)
		for (i=0;i<34;i++)
			PR0[i] = aM0[i];
	else if	(!Mono)
		for (i=0;i<34;i++)
			PR0[i] = aS0[i];

	PR = Interp2(aF0,PR0,f_MHz,34);
	return PR;
}


double CGE84_Functions::GE84_ProtectionR(CString Yst_cls,double Fx_MHz,double Fy_MHz,int Xsys,int Ysys,double E50,double Et,CString Ymod) 
{
	double As = 0.0, At = 0.0, PR = 0.0;

	if(Yst_cls=="BC")
	{
		double Foffset = fabs(Fx_MHz-Fy_MHz);

		BOOL Fm = FALSE;
	//	if(Ymod=="FM")
		if(Ymod==_T("F"))
			Fm = TRUE;

		if((Xsys==1)&&(Ysys==1 || Ysys==2 || Ysys==3 || Ysys==4 || Ysys==5))
		{
			As = SM851_TABLE_1213(Foffset,TRUE,TRUE,Fm,75) ;
			At = SM851_TABLE_1213(Foffset,TRUE,FALSE,Fm,75) ;
		}
		else if((Xsys==4)&&(Ysys==1 || Ysys==4))
		{
			As = SM851_TABLE_1213(Foffset,FALSE,TRUE,Fm,75) ;
			At = SM851_TABLE_1213(Foffset,FALSE,FALSE,Fm,75) ;
		}
		else if((Xsys==2)&&(Ysys==1 || Ysys==2 || Ysys==3 || Ysys==4 || Ysys==5))
		{
			As = SM851_TABLE_1213(Foffset,TRUE,TRUE,Fm,50) ;
			At = SM851_TABLE_1213(Foffset,TRUE,FALSE,Fm,50) ;
		}
		else if((Xsys==3 || Xsys==5)&&(Ysys==2 || Ysys==3 || Ysys==5))
		{
			As = SM851_TABLE_1213(Foffset,FALSE,TRUE,Fm,50) ;
			At = SM851_TABLE_1213(Foffset,FALSE,FALSE,Fm,50) ;
		}
		else if((Xsys==3 || Xsys==5)&&(Ysys==1 || Ysys==4))
		{
			As = GE84_TABLE_2_3(Foffset,TRUE,50) ;
			At = GE84_TABLE_2_3(Foffset,FALSE,50) ;
		}
		else if((Xsys==4)&&(Ysys==2 || Ysys==3 || Ysys==5))
		{
			As = GE84_TABLE_2_3(Foffset,TRUE,75) ;
			At = GE84_TABLE_2_3(Foffset,FALSE,75) ;
		}
	}
	else if(Yst_cls=="BT")
	{
		double DeltaF = (Fx_MHz-Fy_MHz);
		if(Xsys==1 || Xsys==2)
			As = GE84_TABLE_2_7(DeltaF,TRUE) ;
		else if(Xsys==3 || Xsys==4 || Xsys==5)
			As = GE84_TABLE_2_7(DeltaF,FALSE) ;
		At = As - 8.0 ;
	}

	if((E50+As)>=(At+Et))
		PR = As;
	else
		PR = At;

	return PR;
}

